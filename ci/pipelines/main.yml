groups:
- jobs:
  - create-alpha-release
  - test-integration-ubuntu-xenial
  - promote-to-beta
  - promote-to-rc
  - publish
  name: all
- jobs:
  - bump-major
  - bump-minor
  - bump-patch
  name: ci-state
jobs:
- name: create-alpha-release
  plan:
  - get: repo
    trigger: true
  - task: create-release
    file: repo/ci/tasks/create-dev-release-tarball.yml
  - task: repackage-with-official-artifacts
    file: repo/ci/tasks/repackage-with-official-artifacts.yml
  - put: alpha-bosh-release-tarball
    params:
      files:
      - release/*.tgz
      version: release/version
    get_params:
      skip_download: true
- name: test-integration-ubuntu-xenial
  serial: true
  serial_groups:
  - highload
  plan:
  - aggregate:
    - get: release
      resource: alpha-bosh-release-tarball
      trigger: true
      passed:
      - create-alpha-release
    - get: repo
      passed:
      - create-alpha-release
    - get: stemcell
      resource: ubuntu-xenial-stemcell
  - put: ubuntu-xenial-integration-github-status
    params:
      commit: repo
      state: pending
  - task: test
    file: repo/ci/tasks/test-integration.yml
    privileged: true
    on_failure:
      put: ubuntu-xenial-integration-github-status
      params:
        commit: repo
        state: failure
    on_success:
      put: ubuntu-xenial-integration-github-status
      params:
        commit: repo
        state: success
- name: promote-to-beta
  plan:
  - aggregate:
    - get: release
      resource: alpha-bosh-release-tarball
      trigger: true
      passed:
      - test-integration-ubuntu-xenial
    - get: repo
      passed:
      - test-integration-ubuntu-xenial
  - put: beta-bosh-release-tarball
    params:
      metalink: release/.resource/metalink.meta4
    get_params:
      skip_download: true
- name: promote-to-rc
  plan:
  - aggregate:
    - get: release
      resource: beta-bosh-release-tarball
      passed:
      - promote-to-beta
    - get: repo
      passed:
      - promote-to-beta
  - put: rc-bosh-release-tarball
    params:
      metalink: release/.resource/metalink.meta4
    get_params:
      skip_download: true
- name: publish
  serial_groups:
  - version
  plan:
  - get: repo
    passed:
    - promote-to-rc
  - get: rc-bosh-release-tarball
    passed:
    - promote-to-rc
  - get: version
  - do:
    - put: bosh-release
      params:
        tarball: rc-bosh-release-tarball/*.tgz
        version: version/version
        author_name: ((maintainer_name))
        author_email: ((maintainer_email))
    - put: bosh-release-tarball
      params:
        files:
        - bosh-release/*.tgz
        version: bosh-release/version
    - task: build-release-metadata
      file: repo/ci/tasks/build-release-metadata.yml
    - put: github-release
      params:
        name: release-metadata/name
        tag: release-metadata/tag
        body: release-metadata/notes.md
        globs:
        - bosh-release-tarball/*.tgz
    ensure:
      put: version
      params:
        bump: patch
- name: bump-major
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: major
- name: bump-minor
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: minor
- name: bump-patch
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: patch
resources:
- name: repo
  type: git
  source: &repo
    uri: git@github.com:dpb587/ssoca-bosh-release.git
    branch: master
    private_key: ((ci_deploy_ssh_key))
- name: version
  type: semver
  source:
    <<: *repo
    driver: git
    branch: ci-state
    file: version/master
- name: bosh-release
  type: bosh-release
  source:
    <<: *repo
    private_config:
      blobstore:
        options:
          access_key_id: ((ci_access_key))
          secret_access_key: ((ci_secret_key))
- name: github-release
  type: github-release
  source:
    owner: dpb587
    repository: ssoca-bosh-release
    access_token: ((github_access_token))
- name: alpha-bosh-release-tarball
  type: metalink-repository
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/ssoca-bosh-release.git//release/alpha#artifacts
- name: beta-bosh-release-tarball
  type: metalink-repository
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/ssoca-bosh-release.git//release/beta#artifacts
- name: rc-bosh-release-tarball
  type: metalink-repository
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/ssoca-bosh-release.git//release/rc#artifacts
- name: bosh-release-tarball
  type: metalink-repository
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/ssoca-bosh-release.git//release/stable#artifacts
- name: ubuntu-xenial-integration-github-status
  type: github-status
  source:
    access_token: ((github_access_token))
    branch: master
    context: ci/integration/ubuntu-xenial
    repository: dpb587/openvpn-bosh-release
- name: ubuntu-xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-xenial-go_agent
- name: slack-alert
  type: slack-notification
  source:
    url: ((ci_slack_hook_url))
resource_types:
- name: bosh-release
  type: docker-image
  source:
    repository: dpb587/bosh-release-resource
- name: dynamic-metalink
  type: docker-image
  source:
    repository: dpb587/dynamic-metalink-resource
- name: metalink-repository
  type: docker-image
  source:
    repository: dpb587/metalink-repository-resource
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
shared:
  release_artifacts: &release_artifacts
    mirror_files:
    - destination: s3://s3-external-1.amazonaws.com/dpb587-ssoca-bosh-release-us-east-1/artifacts/release/{{.SHA1}}
      env:
        AWS_ACCESS_KEY_ID: ((ci_access_key))
        AWS_SECRET_ACCESS_KEY: ((ci_secret_key))
    options:
      private_key: ((ci_deploy_ssh_key))
bosh_release_blobs_upgrader:
  track_files:
  - .resource/metalink.meta4
  resource_defaults:
    check_every: 6h
  serial_groups:
  - serial
  before_upload:
    task: test
    file: repo/ci/tasks/test-deploy.yml
    privileged: true
  after_upload:
    put: repo
    params:
      repository: repo
      rebase: true
  on_failure:
    put: slack-alert
    params:
      text: Failed to upgrade ((blob)) to v$TEXT_FILE_CONTENT.
      text_file: blob/.resource/version
      attachments:
      - author_icon: https://github.com/concourse.png
        author_name: main pipeline
        author_link: https://github.com/dpb587/ssoca-bosh-release/blob/master/ci/pipelines/main.yml
        title: $BUILD_JOB_NAME/$BUILD_NAME
        title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        color: danger
  on_success:
    put: slack-alert
    params:
      text: Successfully upgraded ((blob)) to v$TEXT_FILE_CONTENT.
      text_file: blob/.resource/version
      attachments:
      - author_icon: https://github.com/concourse.png
        author_name: main pipeline
        author_link: https://github.com/dpb587/ssoca-bosh-release/blob/master/ci/pipelines/main.yml
        title: $BUILD_JOB_NAME/$BUILD_NAME
        title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        color: good
